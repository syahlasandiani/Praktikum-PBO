/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author macbook
 */
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

public class Gui extends javax.swing.JFrame {
    
    private DefaultListModel<String> model;
    private List<String> savedData = new ArrayList<>();
    private java.util.Set<String> savedSet = new java.util.HashSet<>();
    private java.util.Map<Integer, String> savedMap = new java.util.HashMap<>();

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
  
        model = new DefaultListModel<>();
        for (int i = 1; i <= 5; i++) {
            model.addElement("Item " + i);
        }
        listItem.setModel(model);
}

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listItem = new javax.swing.JList<>();
        buttonAddItem = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonClearAll = new javax.swing.JButton();
        insertData = new javax.swing.JButton();
        saveData = new javax.swing.JButton();
        textField = new javax.swing.JTextField();
        labelData = new javax.swing.JLabel();
        itemName = new javax.swing.JLabel();
        buttonSaveToSet = new javax.swing.JButton();
        buttonSaveToMap = new javax.swing.JButton();
        buttonInsertDataSet = new javax.swing.JButton();
        buttonInsertDataMap = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listItem.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listItem);

        buttonAddItem.setText("add");
        buttonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddItemActionPerformed(evt);
            }
        });

        buttonDelete.setText("delete");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonUpdate.setText("update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        buttonClearAll.setText("clear all");
        buttonClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearAllActionPerformed(evt);
            }
        });

        insertData.setText("insert data list");
        insertData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertDataActionPerformed(evt);
            }
        });

        saveData.setText("save to list");
        saveData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDataActionPerformed(evt);
            }
        });

        labelData.setText("data tersimpan = 0");

        itemName.setText("item name:");

        buttonSaveToSet.setText("save to set");
        buttonSaveToSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveToSetActionPerformed(evt);
            }
        });

        buttonSaveToMap.setText("save to map");
        buttonSaveToMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveToMapActionPerformed(evt);
            }
        });

        buttonInsertDataSet.setText("insert data set");
        buttonInsertDataSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInsertDataSetActionPerformed(evt);
            }
        });

        buttonInsertDataMap.setText("insert data map");
        buttonInsertDataMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInsertDataMapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonClearAll)
                        .addGap(18, 18, 18)
                        .addComponent(buttonAddItem)
                        .addGap(18, 18, 18)
                        .addComponent(buttonUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(buttonDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insertData)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(saveData)
                                        .addGap(35, 35, 35)
                                        .addComponent(labelData))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(itemName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(buttonSaveToSet)
                                    .addComponent(buttonSaveToMap)
                                    .addComponent(buttonInsertDataSet)
                                    .addComponent(buttonInsertDataMap))))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelData)
                            .addComponent(saveData))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(insertData)
                        .addGap(12, 12, 12)
                        .addComponent(buttonSaveToSet)
                        .addGap(12, 12, 12)
                        .addComponent(buttonInsertDataSet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSaveToMap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonInsertDataMap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemName)
                            .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonClearAll)
                    .addComponent(buttonAddItem)
                    .addComponent(buttonUpdate)
                    .addComponent(buttonDelete))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddItemActionPerformed
        String newItem = textField.getText().trim();
        if (!newItem.isEmpty()) {
        model.addElement(newItem);
        textField.setText("");
    }        // TODO add your handling code here:
    }//GEN-LAST:event_buttonAddItemActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        int index = listItem.getSelectedIndex();
        if (index != -1) {
        model.remove(index);
    }        // TODO add your handling code here:
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
       int index = listItem.getSelectedIndex();
       String newItem = textField.getText().trim();
       if (index != -1 && !newItem.isEmpty()) {
           model.setElementAt(newItem, index);
       }        // TODO add your handling code here:
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearAllActionPerformed
        model.clear(); // TODO add your handling code here:
    }//GEN-LAST:event_buttonClearAllActionPerformed

    private void saveDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDataActionPerformed
        savedData.clear();
        for (int i = 0; i < model.size(); i++) {
        savedData.add(model.getElementAt(i));
    }
        labelData.setText("data tersimpan = " + savedData.size());        // TODO add your handling code here:
    }//GEN-LAST:event_saveDataActionPerformed

    private void insertDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertDataActionPerformed
        for (String item : savedData) {
        if (!model.contains(item)) {
            model.addElement(item);
        }
    }        // TODO add your handling code here:
    }//GEN-LAST:event_insertDataActionPerformed

    private void buttonSaveToSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveToSetActionPerformed
        savedSet.clear();
        for (int i = 0; i < model.size(); i++) {
            savedSet.add(model.getElementAt(i));
        }
        labelData.setText("data set tersimpan = " + savedSet.size());        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSaveToSetActionPerformed

    private void buttonSaveToMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveToMapActionPerformed
        savedMap.clear();
        for (int i = 0; i < model.size(); i++) {
            savedMap.put(i, model.getElementAt(i));
        }
        labelData.setText("data map tersimpan = " + savedMap.size());        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSaveToMapActionPerformed

    private void buttonInsertDataSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInsertDataSetActionPerformed
        for (String item : savedSet) {
        if (!model.contains(item)) {
            model.addElement(item);
        }
    }        // TODO add your handling code here:
    }//GEN-LAST:event_buttonInsertDataSetActionPerformed

    private void buttonInsertDataMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInsertDataMapActionPerformed
        for (String item : savedMap.values()) {
        if (!model.contains(item)) {
            model.addElement(item);
        }
    }        // TODO add your handling code here:
    }//GEN-LAST:event_buttonInsertDataMapActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddItem;
    private javax.swing.JButton buttonClearAll;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonInsertDataMap;
    private javax.swing.JButton buttonInsertDataSet;
    private javax.swing.JButton buttonSaveToMap;
    private javax.swing.JButton buttonSaveToSet;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JButton insertData;
    private javax.swing.JLabel itemName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelData;
    private javax.swing.JList<String> listItem;
    private javax.swing.JButton saveData;
    private javax.swing.JTextField textField;
    // End of variables declaration//GEN-END:variables
}
